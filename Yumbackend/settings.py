"""
Django settings for Yumbackend project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from decouple import config
from corsheaders.defaults import default_headers
import os
from datetime import timedelta
BASE_DIR = Path(__file__).resolve().parent.parent
# Build paths inside the project like this: BASE_DIR / 'subdir'.



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-6^+_byj)@3m*k(_nn4+3h2d46ob6#%=(pb0!+nc)wzv4k@(id-"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['www.api.yum-express.com', 'api.yum-express.com', 'localhost',  "127.0.0.1", "77f464762855.ngrok-free.app", "testserver"  ]


# Application definition

INSTALLED_APPS = [
    "jazzmin", 
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    'channels',
    'django_filters',
    
    # Custom apps
    'authentication',
    'orders',
    'tracking',
    'payments',
    'support',
    'dispatch',
    'notifications',
    
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    'corsheaders.middleware.CorsMiddleware',
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "Yumbackend.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / 'templates'],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "Yumbackend.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}



# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': os.getenv('DB_NAME', 'yum_db'),
#         'USER': os.getenv('DB_USER', 'cybergang'),
#         'PASSWORD': os.getenv('DB_PASSWORD', 'Kijangwani2003'),
#         'HOST': os.getenv('DB_HOST', 'localhost'),  # use localhost for same-server DB
#         'PORT': os.getenv('DB_PORT', '5432'),
#         'OPTIONS': {
#             'sslmode': 'disable',
#         },
#     }
# }


AUTH_USER_MODEL = 'authentication.User'


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',  # JWT auth
        'rest_framework.authentication.TokenAuthentication',            # DRF token auth (optional)
        'rest_framework.authentication.SessionAuthentication',          # Session auth
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
    ],
}



# JWT Configuration
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/


# CORS settings for Next.js frontend
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
    "https://77f464762855.ngrok-free.app",

    "https://yum-express.com",
    "https://www.yum-express.com",

    "https://vendors.yum-express.com",
    "https://www.vendors.yum-express.com",

    "https://riders.yum-express.com",
    "https://www.riders.yum-express.com",
]


CORS_ALLOW_METHODS = [
    "GET",
    "POST",
    "PUT",
    "PATCH",
    "DELETE",
    "OPTIONS"
]

CORS_ALLOW_HEADERS = ["*"]
CORS_ALLOW_CREDENTIALS = True

# Also allow common headers (like Content-Type, Authorization)
CORS_ALLOW_HEADERS = list(default_headers) + [
    'content-type',
    'authorization',
    'ngrok-skip-browser-warning'
    
   
]
# Avoid redirects on trailing slash
APPEND_SLASH = False

# Channels configuration for WebSocket
ASGI_APPLICATION = 'Yumbackend.asgi.application'

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)],
        },
    },
}

# Celery configuration for background tasks
CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'



# ClickPesa payment gateway settings
CLICKPESA_CLIENT_ID = config('CLICKPESA_CLIENT_ID', default='')
CLICKPESA_API_KEY = config('CLICKPESA_API_KEY', default='')
CLICKPESA_BASE_URL = 'https://api.clickpesa.com/third-parties'




# Google Maps API for tracking
GOOGLE_MAPS_API_KEY = os.environ.get('GOOGLE_MAPS_API_KEY')

# Google Maps API settings
GOOGLE_MAPS_SETTINGS = {
    'API_KEY': GOOGLE_MAPS_API_KEY,
    'LANGUAGE': 'en',
    'REGION': 'TZ',  # Tanzania region code
}



# Next SMS configuration
NEXT_SMS_USERNAME = config('NEXT_SMS_USERNAME', default='')
NEXT_SMS_PASSWORD = config('NEXT_SMS_PASSWORD', default='')
IS_TEST_MODE = config('IS_TEST_MODE', default=False, cast=bool)
# Next SMS URLs
NEXT_SMS_TEST_URL = 'https://messaging-service.co.tz/api/sms/v1/test/text/single'
NEXT_SMS_PROD_URL = 'https://messaging-service.co.tz/api/sms/v1/text/single'
NEXT_SMS_URL = NEXT_SMS_TEST_URL if IS_TEST_MODE else NEXT_SMS_PROD_URL
SENDER_ID = config('SENDER_ID', default='')



EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "yum-express.com"
EMAIL_PORT = 465
EMAIL_USE_SSL = True 
EMAIL_HOST_USER = "info@yum-express.com"
EMAIL_HOST_PASSWORD = "@yumexpress2025"
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
ADMIN_EMAIL_DEFAULT = "amirmussa2003@gmail.com"

ADMINS = [
    ("Admin", "yumexpreess@gmail.com"),
    ("Support", "support@yum-express.com"),
]


STATIC_URL = '/static/'

# Folder where `collectstatic` will collect all static files for production
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Additional static directories for development
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),  # your app-level static folder
]

# -------------------
# Media files (User uploads)
# -------------------
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')





# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"



JAZZMIN_SETTINGS = {
    # title of the window (Will default to current_admin_site.site_title if absent or None)
    "site_title": "Yum-Express Admin",
    # Title on the login screen (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_header": "Yum-Express Admin",
    # Title on the brand (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_brand": "Yum-Express",
    # Logo to use for your site, must be present in static files, used for brand on top left
    # "site_logo": "books/img/logo.png",
    # Logo to use for your site, must be present in static files, used for login form logo (defaults to site_logo)
    "login_logo": None,
    # Logo to use for login form in dark themes (defaults to login_logo)
    "login_logo_dark": None,
    # CSS classes that are applied to the logo above
    "site_logo_classes": "img-circle",
    # Relative path to a favicon for your site, will default to site_logo if absent (ideally 32x32 px)
    "site_icon": None,
    # Welcome text on the login screen
    "welcome_sign": "Welcome to the Yum-Express Admin",
    # Copyright on the footer
    "copyright": "Acme Yum-Express Ltd",
    # Whether to display the side menu
    "show_sidebar": True,
    # Whether to aut expand the menu
    "navigation_expanded": True,
    # Hide these apps when generating side menu e.g (auth)
    "hide_apps": [],
    # Hide these models when generating side menu (e.g auth.user)
    "hide_models": [],
}



# Logging Configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs' / 'django.log',
            'formatter': 'verbose',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'root': {
        'handlers': ['console', 'file'],
        'level': 'INFO',
    },
  
}

# Create logs directory
os.makedirs(BASE_DIR / 'logs', exist_ok=True)