# Generated by Django 5.1.6 on 2025-08-16 14:17

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("authentication", "0001_initial"),
        ("orders", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Geofence",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "geofence_type",
                    models.CharField(
                        choices=[
                            ("pickup", "Pickup Location"),
                            ("delivery", "Delivery Location"),
                            ("vendor", "Vendor Location"),
                            ("warehouse", "Warehouse"),
                            ("restricted", "Restricted Area"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "center_latitude",
                    models.DecimalField(decimal_places=8, max_digits=10),
                ),
                (
                    "center_longitude",
                    models.DecimalField(decimal_places=8, max_digits=11),
                ),
                ("radius_meters", models.PositiveIntegerField(default=100)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
            ],
        ),
        migrations.CreateModel(
            name="LiveTracking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_id", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("is_active", models.BooleanField(default=True)),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("ended_at", models.DateTimeField(blank=True, null=True)),
                (
                    "current_latitude",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=10, null=True
                    ),
                ),
                (
                    "current_longitude",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=11, null=True
                    ),
                ),
                ("last_update", models.DateTimeField(blank=True, null=True)),
                (
                    "estimated_pickup_arrival",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "estimated_delivery_arrival",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "total_distance_covered",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=8),
                ),
                (
                    "distance_to_pickup",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                (
                    "distance_to_delivery",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                (
                    "driver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="authentication.driver",
                    ),
                ),
                (
                    "order",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="live_tracking",
                        to="orders.order",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NotificationQueue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "recipient_type",
                    models.CharField(
                        choices=[
                            ("customer", "Customer"),
                            ("vendor", "Vendor"),
                            ("driver", "Driver"),
                            ("admin", "Admin"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("order_update", "Order Update"),
                            ("driver_assigned", "Driver Assigned"),
                            ("pickup_ready", "Pickup Ready"),
                            ("en_route", "En Route"),
                            ("delivered", "Delivered"),
                            ("cancelled", "Cancelled"),
                            ("emergency", "Emergency"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("message", models.TextField()),
                ("is_sent", models.BooleanField(default=False)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "order",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="orders.order",
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="OrderTracking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("order_placed", "Order Placed"),
                            ("order_confirmed", "Order Confirmed"),
                            ("preparing", "Preparing Order"),
                            ("ready_for_pickup", "Ready for Pickup"),
                            ("driver_assigned", "Driver Assigned"),
                            ("driver_en_route_pickup", "Driver En Route to Pickup"),
                            ("driver_arrived_pickup", "Driver Arrived at Pickup"),
                            ("order_picked_up", "Order Picked Up"),
                            ("en_route_delivery", "En Route to Delivery"),
                            ("driver_arrived_delivery", "Driver Arrived at Delivery"),
                            ("order_delivered", "Order Delivered"),
                            ("order_cancelled", "Order Cancelled"),
                        ],
                        max_length=30,
                    ),
                ),
                ("message", models.TextField(blank=True)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=10, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=11, null=True
                    ),
                ),
                ("estimated_arrival", models.DateTimeField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tracking_updates",
                        to="orders.order",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="TrackingEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("location_update", "Location Update"),
                            ("status_change", "Status Change"),
                            ("geofence_enter", "Geofence Enter"),
                            ("geofence_exit", "Geofence Exit"),
                            ("speed_alert", "Speed Alert"),
                            ("route_deviation", "Route Deviation"),
                            ("emergency_alert", "Emergency Alert"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField()),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=10, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=11, null=True
                    ),
                ),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "live_tracking",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to="tracking.livetracking",
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="DriverLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("latitude", models.DecimalField(decimal_places=8, max_digits=10)),
                ("longitude", models.DecimalField(decimal_places=8, max_digits=11)),
                ("accuracy", models.FloatField(help_text="GPS accuracy in meters")),
                (
                    "speed",
                    models.FloatField(blank=True, help_text="Speed in km/h", null=True),
                ),
                (
                    "heading",
                    models.FloatField(
                        blank=True, help_text="Direction in degrees", null=True
                    ),
                ),
                (
                    "altitude",
                    models.FloatField(
                        blank=True, help_text="Altitude in meters", null=True
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "driver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="location_history",
                        to="authentication.driver",
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["driver", "-timestamp"],
                        name="tracking_dr_driver__a7462b_idx",
                    ),
                    models.Index(
                        fields=["timestamp"], name="tracking_dr_timesta_6c431d_idx"
                    ),
                ],
            },
        ),
    ]
