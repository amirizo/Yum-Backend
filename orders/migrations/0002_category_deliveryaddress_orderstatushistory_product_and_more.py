# Generated by Django 5.1.6 on 2025-08-14 02:28

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("orders", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        help_text="High-quality category image",
                        null=True,
                        upload_to="categories/",
                    ),
                ),
                (
                    "category_type",
                    models.CharField(
                        choices=[("groceries", "Groceries"), ("foods", "Foods")],
                        default="foods",
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name_plural": "Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="DeliveryAddress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "label",
                    models.CharField(help_text="e.g., Home, Office", max_length=50),
                ),
                ("street_address", models.CharField(max_length=255)),
                ("city", models.CharField(max_length=100)),
                ("state", models.CharField(max_length=100)),
                ("postal_code", models.CharField(max_length=20)),
                ("country", models.CharField(default="Tanzania", max_length=100)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                ("is_default", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name_plural": "Delivery Addresses",
            },
        ),
        migrations.CreateModel(
            name="OrderStatusHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("preparing", "Preparing"),
                            ("ready", "Ready for Pickup"),
                            ("picked_up", "Picked Up"),
                            ("in_transit", "In Transit"),
                            ("delivered", "Delivered"),
                            ("cancelled", "Cancelled"),
                        ],
                        max_length=20,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name_plural": "Order Status Histories",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("short_description", models.CharField(blank=True, max_length=500)),
                (
                    "sku",
                    models.CharField(
                        blank=True, help_text="Stock Keeping Unit", max_length=100
                    ),
                ),
                ("barcode", models.CharField(blank=True, max_length=100)),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "compare_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Original price for discount display",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "cost_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Cost price for profit calculation",
                        max_digits=10,
                        null=True,
                    ),
                ),
                ("track_inventory", models.BooleanField(default=True)),
                ("inventory_quantity", models.PositiveIntegerField(default=0)),
                ("low_stock_threshold", models.PositiveIntegerField(default=5)),
                ("allow_backorder", models.BooleanField(default=False)),
                (
                    "weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Weight in grams",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "unit",
                    models.CharField(
                        blank=True,
                        help_text="Unit of measurement (e.g., kg, pieces, liters)",
                        max_length=50,
                    ),
                ),
                (
                    "unit_size",
                    models.CharField(
                        blank=True, help_text="e.g., 500ml, 1kg, Large", max_length=50
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        help_text="High-quality product image (recommended: 800x800px or higher)",
                        null=True,
                        upload_to="products/",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("out_of_stock", "Out of Stock"),
                            ("discontinued", "Discontinued"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("is_available", models.BooleanField(default=True)),
                ("is_featured", models.BooleanField(default=False)),
                (
                    "preparation_time",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Preparation time in minutes (for food items)",
                        null=True,
                    ),
                ),
                ("is_vegetarian", models.BooleanField(default=False)),
                ("is_vegan", models.BooleanField(default=False)),
                ("is_gluten_free", models.BooleanField(default=False)),
                (
                    "spice_level",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Spice level 0-5",
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "stock_quantity",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Available stock quantity (for grocery items)",
                    ),
                ),
                ("meta_title", models.CharField(blank=True, max_length=200)),
                ("meta_description", models.TextField(blank=True)),
                (
                    "tags",
                    models.CharField(
                        blank=True, help_text="Comma-separated tags", max_length=500
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="products/gallery/")),
                ("alt_text", models.CharField(blank=True, max_length=200)),
                ("sort_order", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["sort_order", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProductReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=200)),
                ("comment", models.TextField(blank=True)),
                ("is_verified_purchase", models.BooleanField(default=False)),
                ("is_approved", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProductVariant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="e.g., Size, Color, Flavor", max_length=100
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        help_text="e.g., Large, Red, Chocolate", max_length=100
                    ),
                ),
                (
                    "price_adjustment",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Price difference from base product",
                        max_digits=10,
                    ),
                ),
                ("sku", models.CharField(blank=True, max_length=100)),
                ("inventory_quantity", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "food_rating",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                (
                    "delivery_rating",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "overall_rating",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("comment", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.RemoveIndex(
            model_name="order",
            name="orders_orde_status_c6dd84_idx",
        ),
        migrations.RemoveIndex(
            model_name="order",
            name="orders_orde_created_0e92de_idx",
        ),
        migrations.RemoveIndex(
            model_name="order",
            name="orders_orde_custome_59b6fb_idx",
        ),
        migrations.RemoveIndex(
            model_name="order",
            name="orders_orde_vendor__1aa298_idx",
        ),
        migrations.RenameField(
            model_name="order",
            old_name="actual_pickup_time",
            new_name="confirmed_at",
        ),
        migrations.RenameField(
            model_name="order",
            old_name="scheduled_pickup_time",
            new_name="delivered_at",
        ),
        migrations.RenameField(
            model_name="orderitem",
            old_name="description",
            new_name="special_instructions",
        ),
        migrations.RemoveField(
            model_name="order",
            name="delivery_contact_name",
        ),
        migrations.RemoveField(
            model_name="order",
            name="delivery_contact_phone",
        ),
        migrations.RemoveField(
            model_name="order",
            name="delivery_latitude",
        ),
        migrations.RemoveField(
            model_name="order",
            name="delivery_longitude",
        ),
        migrations.RemoveField(
            model_name="order",
            name="estimated_distance",
        ),
        migrations.RemoveField(
            model_name="order",
            name="estimated_duration",
        ),
        migrations.RemoveField(
            model_name="order",
            name="items_description",
        ),
        migrations.RemoveField(
            model_name="order",
            name="payment_method",
        ),
        migrations.RemoveField(
            model_name="order",
            name="pickup_address",
        ),
        migrations.RemoveField(
            model_name="order",
            name="pickup_contact_name",
        ),
        migrations.RemoveField(
            model_name="order",
            name="pickup_contact_phone",
        ),
        migrations.RemoveField(
            model_name="order",
            name="pickup_latitude",
        ),
        migrations.RemoveField(
            model_name="order",
            name="pickup_longitude",
        ),
        migrations.RemoveField(
            model_name="order",
            name="priority",
        ),
        migrations.RemoveField(
            model_name="orderitem",
            name="dimensions",
        ),
        migrations.RemoveField(
            model_name="orderitem",
            name="name",
        ),
        migrations.RemoveField(
            model_name="orderitem",
            name="weight",
        ),
        migrations.AddField(
            model_name="order",
            name="driver",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="driver_orders",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="subtotal",
            field=models.DecimalField(
                decimal_places=2,
                default=0.0,
                max_digits=10,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="order",
            name="tax_amount",
            field=models.DecimalField(
                decimal_places=2,
                default=0,
                max_digits=10,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="order",
            name="customer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="orders",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="order",
            name="delivery_fee",
            field=models.DecimalField(
                decimal_places=2,
                default=0,
                max_digits=10,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="order",
            name="payment_status",
            field=models.CharField(
                choices=[
                    ("pending", "Pending"),
                    ("paid", "Paid"),
                    ("failed", "Failed"),
                    ("refunded", "Refunded"),
                ],
                default="pending",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="order",
            name="status",
            field=models.CharField(
                choices=[
                    ("pending", "Pending"),
                    ("confirmed", "Confirmed"),
                    ("preparing", "Preparing"),
                    ("ready", "Ready for Pickup"),
                    ("picked_up", "Picked Up"),
                    ("in_transit", "In Transit"),
                    ("delivered", "Delivered"),
                    ("cancelled", "Cancelled"),
                ],
                default="pending",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="order",
            name="total_amount",
            field=models.DecimalField(
                decimal_places=2,
                max_digits=10,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="orderitem",
            name="quantity",
            field=models.PositiveIntegerField(
                validators=[django.core.validators.MinValueValidator(1)]
            ),
        ),
        migrations.AlterField(
            model_name="orderitem",
            name="total_price",
            field=models.DecimalField(
                decimal_places=2,
                max_digits=10,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="orderitem",
            name="unit_price",
            field=models.DecimalField(
                decimal_places=2,
                max_digits=10,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AddField(
            model_name="deliveryaddress",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="addresses",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="order",
            name="delivery_address",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="orders.deliveryaddress"
            ),
        ),
        migrations.AddField(
            model_name="orderstatushistory",
            name="changed_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="orderstatushistory",
            name="order",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="status_history",
                to="orders.order",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="products",
                to="orders.category",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="vendor",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="products",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="orderitem",
            name="product",
            field=models.ForeignKey(
                default=42,
                on_delete=django.db.models.deletion.CASCADE,
                to="orders.product",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="productimage",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="images",
                to="orders.product",
            ),
        ),
        migrations.AddField(
            model_name="productreview",
            name="customer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="product_reviews",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="productreview",
            name="order_item",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="orders.orderitem",
            ),
        ),
        migrations.AddField(
            model_name="productreview",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="product_reviews",
                to="orders.product",
            ),
        ),
        migrations.AddField(
            model_name="productvariant",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="variants",
                to="orders.product",
            ),
        ),
        migrations.AddField(
            model_name="orderitem",
            name="variant",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="orders.productvariant",
            ),
        ),
        migrations.AddField(
            model_name="review",
            name="customer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="reviews",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="review",
            name="driver",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="driver_reviews",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="review",
            name="order",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="review",
                to="orders.order",
            ),
        ),
        migrations.AddField(
            model_name="review",
            name="vendor",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="vendor_reviews",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterUniqueTogether(
            name="product",
            unique_together={("vendor", "sku")},
        ),
        migrations.AlterUniqueTogether(
            name="productreview",
            unique_together={("product", "customer", "order_item")},
        ),
        migrations.AlterUniqueTogether(
            name="productvariant",
            unique_together={("product", "name", "value")},
        ),
    ]
